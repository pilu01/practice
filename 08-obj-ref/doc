一，对象有别名、值、标识
1.变量最好把它们理解为附加在对象上的标注，贴的多个标注，就是别名
2.对象一旦创建，标识就不会变，可以理解成内存地址，
   is运算符比较两个对象的标识, id () 函数返回对象标识的整数部分。
3.== 比较的就是值
4.浅复制，即复制了最外层容器，副本中的元素是源容器中元素的引用
5.尽量避免可变参数做函数默认参数

二，del和垃圾回收
1.在 CPython 中，垃圾回收使用的主要算法是引用计数。实际上，每个对象都会统计有多少引用指向自己。
当引用计数归零时，对象立即就被销毁.
2.或者无法得到对象时， 重新绑定也可能会导致对象的引用数量归零，导致对象被销毁。

三，弱引用
1，正是因为有引用，对象才会在内存中存在。当对象的引用数量归零后，垃圾回收程序会把
  对象销毁。但是，有时需要引用对象，而不让对象存在的时间超过所需时间。这经常用在
  缓存中。
2.弱引用不会增加对象的引用数量
3.WeakValueDictionary  实现弱引用，经常用于缓存
